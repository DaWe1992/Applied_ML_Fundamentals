# create a mesh-grid
X1, X2 = np.meshgrid(
    np.linspace(min(X[:, 0]), max(X[:, 0]), 1000),
    np.linspace(min(X[:, 1]), max(X[:, 1]), 1000)
)

# classify each point in the mesh-grid
Z = clf.predict(np.c_[X1.ravel(), X2.ravel()]).reshape(X1.shape)

# create a figure
fig, ax = plt.subplots(figsize=(12.00, 7.00))
# plot contour surface
ax.contourf(X1, X2, Z, cmap="rainbow", alpha=0.4)
# plot decision boundary
ax.contour(X1, X2, Z, levels=[0], cmap="Greys_r", linewidths=2.5)
# scatter plot of data points
ax.scatter(X[:, 0], X[:, 1], c=y, cmap="rainbow", edgecolor="k", s=100)

plt.show()